# sample_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SampleApi
  # Pricing Model.
  class Pricing < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :price

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :currency

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['price'] = 'price'
      @_hash['currency'] = 'currency'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        price
        currency
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(price = SKIP, currency = SKIP)
      @price = price unless price == SKIP
      @currency = currency unless currency == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      price = hash.key?('price') ? hash['price'] : SKIP
      currency = hash.key?('currency') ? hash['currency'] : SKIP

      # Create object from extracted values.
      Pricing.new(price,
                  currency)
    end

    # Validates an instance of the object from a given value.
    # @param [Pricing | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} price: #{@price}, currency: #{@currency}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} price: #{@price.inspect}, currency: #{@currency.inspect}>"
    end
  end
end
