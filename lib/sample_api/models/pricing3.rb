# sample_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module SampleApi
  # Pricing3 Model.
  class Pricing3 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :membership_fee

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :validity_period

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['membership_fee'] = 'membershipFee'
      @_hash['validity_period'] = 'validityPeriod'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        membership_fee
        validity_period
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(membership_fee = SKIP, validity_period = SKIP)
      @membership_fee = membership_fee unless membership_fee == SKIP
      @validity_period = validity_period unless validity_period == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      membership_fee = hash.key?('membershipFee') ? hash['membershipFee'] : SKIP
      validity_period = if hash.key?('validityPeriod')
                          (DateTimeHelper.from_rfc3339(hash['validityPeriod']) if hash['validityPeriod'])
                        else
                          SKIP
                        end

      # Create object from extracted values.
      Pricing3.new(membership_fee,
                   validity_period)
    end

    def to_custom_validity_period
      DateTimeHelper.to_rfc3339(validity_period)
    end

    # Validates an instance of the object from a given value.
    # @param [Pricing3 | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} membership_fee: #{@membership_fee}, validity_period: #{@validity_period}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} membership_fee: #{@membership_fee.inspect}, validity_period:"\
      " #{@validity_period.inspect}>"
    end
  end
end
