# sample_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SampleApi
  # Pricing5 Model.
  class Pricing5 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :service_charge

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['service_charge'] = 'serviceCharge'
      @_hash['description'] = 'description'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        service_charge
        description
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(service_charge = SKIP, description = SKIP)
      @service_charge = service_charge unless service_charge == SKIP
      @description = description unless description == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      service_charge = hash.key?('serviceCharge') ? hash['serviceCharge'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP

      # Create object from extracted values.
      Pricing5.new(service_charge,
                   description)
    end

    # Validates an instance of the object from a given value.
    # @param [Pricing5 | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} service_charge: #{@service_charge}, description: #{@description}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} service_charge: #{@service_charge.inspect}, description:"\
      " #{@description.inspect}>"
    end
  end
end
