# sample_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SampleApi
  # Details Model.
  class Details < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :manufacturer

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :warranty

    # TODO: Write general description for this method
    # @return [Specifications]
    attr_accessor :specifications

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['manufacturer'] = 'manufacturer'
      @_hash['warranty'] = 'warranty'
      @_hash['specifications'] = 'specifications'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        manufacturer
        warranty
        specifications
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(manufacturer = SKIP, warranty = SKIP, specifications = SKIP)
      @manufacturer = manufacturer unless manufacturer == SKIP
      @warranty = warranty unless warranty == SKIP
      @specifications = specifications unless specifications == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      manufacturer = hash.key?('manufacturer') ? hash['manufacturer'] : SKIP
      warranty = hash.key?('warranty') ? hash['warranty'] : SKIP
      specifications = Specifications.from_hash(hash['specifications']) if hash['specifications']

      # Create object from extracted values.
      Details.new(manufacturer,
                  warranty,
                  specifications)
    end

    # Validates an instance of the object from a given value.
    # @param [Details | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} manufacturer: #{@manufacturer}, warranty: #{@warranty}, specifications:"\
      " #{@specifications}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} manufacturer: #{@manufacturer.inspect}, warranty: #{@warranty.inspect},"\
      " specifications: #{@specifications.inspect}>"
    end
  end
end
