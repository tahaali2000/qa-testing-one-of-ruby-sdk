# sample_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SampleApi
  # ItemsRequest Model.
  class ItemsRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :value

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :tags

    # TODO: Write general description for this method
    # @return [Hash[String, String]]
    attr_accessor :metadata

    # TODO: Write general description for this method
    # @return [Details]
    attr_accessor :details

    # TODO: Write general description for this method
    # @return [StatusEnum]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [Pricing77]
    attr_accessor :pricing

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['value'] = 'value'
      @_hash['tags'] = 'tags'
      @_hash['metadata'] = 'metadata'
      @_hash['details'] = 'details'
      @_hash['status'] = 'status'
      @_hash['pricing'] = 'pricing'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        value
        tags
        metadata
        details
        status
        pricing
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, name = SKIP, value = SKIP, tags = SKIP,
                   metadata = SKIP, details = SKIP, status = SKIP,
                   pricing = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @value = value unless value == SKIP
      @tags = tags unless tags == SKIP
      @metadata = metadata unless metadata == SKIP
      @details = details unless details == SKIP
      @status = status unless status == SKIP
      @pricing = pricing unless pricing == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      value = hash.key?('value') ? hash['value'] : SKIP
      tags = hash.key?('tags') ? hash['tags'] : SKIP
      metadata = hash.key?('metadata') ? hash['metadata'] : SKIP
      details = Details.from_hash(hash['details']) if hash['details']
      status = hash.key?('status') ? hash['status'] : SKIP
      pricing = hash.key?('pricing') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:ItemsRequestPricing), hash['pricing']
      ) : SKIP

      # Create object from extracted values.
      ItemsRequest.new(id,
                       name,
                       value,
                       tags,
                       metadata,
                       details,
                       status,
                       pricing)
    end

    # Validates an instance of the object from a given value.
    # @param [ItemsRequest | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id}, name: #{@name}, value: #{@value}, tags: #{@tags}, metadata:"\
      " #{@metadata}, details: #{@details}, status: #{@status}, pricing: #{@pricing}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id.inspect}, name: #{@name.inspect}, value: #{@value.inspect}, tags:"\
      " #{@tags.inspect}, metadata: #{@metadata.inspect}, details: #{@details.inspect}, status:"\
      " #{@status.inspect}, pricing: #{@pricing.inspect}>"
    end
  end
end
