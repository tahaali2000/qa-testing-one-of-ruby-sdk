# sample_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SampleApi
  # The `UnionTypeLookUp` class serves as a utility class for
  # storing and managing type combinator templates. It acts as a container for the templates
  # used in handling various oneof/anyof instances within the sdk.
  class UnionTypeLookUp
    include CoreLibrary
    # rubocop:disable Lint/RedundantCopDisableDirective, Style/HashSyntax, Layout/FirstArgumentIndentation
    def self.union_types
      {
        :ItemPricing => OneOf.new(
          [
            LeafType.new(Pricing),
            LeafType.new(Pricing1),
            LeafType.new(Pricing2),
            LeafType.new(Pricing3),
            LeafType.new(Pricing4),
            LeafType.new(Pricing5),
            LeafType.new(Pricing6)
          ],
          UnionTypeContext.new(
            is_optional: true
          )
        ),

        :ItemsRequestPricing => AnyOf.new(
          [
            LeafType.new(Pricing),
            LeafType.new(Pricing1),
            LeafType.new(Pricing2),
            LeafType.new(Pricing3),
            LeafType.new(Pricing4),
            LeafType.new(Pricing5),
            LeafType.new(Pricing6)
          ],
          UnionTypeContext.new(
            is_optional: true
          )
        )
      }
    end
    # rubocop:enable Lint/RedundantCopDisableDirective, Style/HashSyntax, Layout/FirstArgumentIndentation

    def self.get(name)
      UnionTypeLookUp.union_types[name]
    end
  end
end
